networks:
  default:
    name: phpughh_roadrunner

volumes:
  checkmk_data:
  grafana_data:
  mariadb_backup:
  mariadb_data:
  mongo_data:
  opensearch_data:
  portainer_data:
  prometheus_data:

services:
  checkmk:
    container_name: checkmk
    hostname: checkmk
    image: phpughh/roadrunner/checkmk:${CHECKMK_VERSION}
    volumes:
      - checkmk_data:/omd/sites
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.checkmk-svc.loadbalancer.server.port=5000"
      - "traefik.http.routers.checkmk.entrypoints=http"
      - "traefik.http.routers.checkmk.rule=Host(`checkmk.phpug.hh`)"
      - "traefik.http.routers.checkmk.priority=2"
      - "traefik.http.routers.checkmk.service=checkmk-svc"

  dev-cli:
    container_name: dev-cli
    hostname: dev-cli
    image: phpughh/roadrunner/php:${PHP_VERSION}-cli
    volumes:
      - ../../:/var/www
    privileged: true
    tty: true
    stdin_open: true
    working_dir: /var/www
    networks:
      - default

  filebeat:
    container_name: filebeat
    hostname: filebeat
    image: phpughh/roadrunner/filebeat:${FILEBEAT_VERSION}
    volumes:
      - ./res/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ../tmp/log:/var/log/phpughh
    networks:
      - default

  grafana:
    container_name: grafana
    hostname: grafana
    image: phpughh/roadrunner/grafana:${GRAFANA_VERSION}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.phpug.hh`)"
      - "traefik.http.routers.grafana.priority=2"
      - "traefik.http.routers.grafana.service=grafana-svc"

  graylog:
    container_name: graylog
    hostname: graylog
    image: phpughh/roadrunner/graylog:${GRAYLOG_VERSION}
    networks:
      - default
    environment:
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://admin:${OPENSEARCH_ADMIN_PASSWORD}@opensearch:9200
      - GRAYLOG_HTTP_EXTERNAL_URI=http://graylog.phpug.hh/
      - GRAYLOG_MONGODB_URI=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongo:27017/graylog
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET}
      - GRAYLOG_ROOT_USER=${GRAYLOG_ROOT_USER}
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.graylog-svc.loadbalancer.server.port=9000"
      - "traefik.http.routers.graylog.entrypoints=http"
      - "traefik.http.routers.graylog.rule=Host(`graylog.phpug.hh`)"
      - "traefik.http.routers.graylog.priority=2"
      - "traefik.http.routers.graylog.service=graylog-svc"
    entrypoint: /usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: phpughh/roadrunner/mariadb:${MARIADB_VERSION}
    volumes:
      - mariadb_backup:/backup
      - mariadb_data:/var/lib/mysql
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    ports:
      - target: 3306
        host_ip: 0.0.0.0
        published: "3306"
        protocol: tcp
        mode: host
    networks:
      - default

  mongo:
    container_name: mongo
    hostname: mongo
    image: phpughh/roadrunner/mongo:${MONGO_VERSION}
    volumes:
      - mongo_data:/data/db
      - ./res/graylog.js:/graylog.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - target: 27017
        host_ip: 0.0.0.0
        published: "27017"
        protocol: tcp
        mode: host
    networks:
      - default

  nginx:
    depends_on:
      - php
    container_name: nginx
    hostname: nginx
    image: phpughh/roadrunner/nginx:${NGINX_VERSION}
    volumes:
      - ../:/var/www/webapp
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.nginx-svc.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx.entrypoints=http"
      - "traefik.http.routers.nginx.rule=HostRegexp(`{subdomain:.+}.phpug.hh`,`localhost`)"
      - "traefik.http.routers.nginx.priority=1"
      - "traefik.http.routers.nginx.service=nginx-svc"

  opensearch:
    container_name: opensearch
    hostname: opensearch
    image: phpughh/roadrunner/opensearch:${OPENSEARCH_VERSION}
    volumes:
      - opensearch_data:/usr/share/opensearch/data
      - ./res/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
    environment:
      - discovery.type=single-node
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_ADMIN_PASSWORD}
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - target: 9200
        host_ip: 0.0.0.0
        published: "9200"
        protocol: tcp
        mode: host
      - target: 9600
        host_ip: 0.0.0.0
        published: "9600"
        protocol: tcp
        mode: host
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.opensearch-svc.loadbalancer.server.port=9200"
      - "traefik.http.routers.opensearch.entrypoints=http"
      - "traefik.http.routers.opensearch.rule=Host(`opensearch.phpug.hh`)"
      - "traefik.http.routers.opensearch.priority=2"
      - "traefik.http.routers.opensearch.service=opensearch-svc"

  otel:
    container_name: otel-collector
    hostname: otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    image: phpughh/roadrunner/otel-collector:${OTEL_COLLECTOR_VERSION}
    volumes:
      - ./res/otel-collector-config.yml:/etc/otel-collector-config.yml
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.otel-svc.loadbalancer.server.port=4318"
      - "traefik.http.routers.otel.entrypoints=http"
      - "traefik.http.routers.otel.rule=Host(`otel-collector.phpug.hh`)"
      - "traefik.http.routers.otel.priority=2"
      - "traefik.http.routers.otel.service=otel-svc"

  portainer:
    container_name: portainer
    hostname: portainer
    image: phpughh/roadrunner/portainer:${PORTAINER_VERSION}
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.entrypoints=http"
      - "traefik.http.routers.portainer.rule=Host(`portainer.phpug.hh`)"
      - "traefik.http.routers.portainer.priority=2"
      - "traefik.http.routers.portainer.service=portainer-svc"

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: phpughh/roadrunner/prometheus:${PROMETHEUS_VERSION}
    volumes:
      - prometheus_data:/prometheus
      - ./res/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.phpug.hh`)"
      - "traefik.http.routers.prometheus.priority=2"
      - "traefik.http.routers.prometheus.service=prometheus-svc"

  start:
    container_name: start
    hostname: start
    image: phpughh/roadrunner/nginx:${NGINX_VERSION}-base
    volumes:
      - ./res/start:/usr/share/nginx/html
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.start-svc.loadbalancer.server.port=80"
      - "traefik.http.routers.start.entrypoints=http"
      - "traefik.http.routers.start.rule=Host(`start.phpug.hh`)"
      - "traefik.http.routers.start.priority=2"
      - "traefik.http.routers.start.service=start-svc"

  traefik:
    container_name: traefik
    hostname: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--accesslog=true"
      - "--accesslog.filePath=/dev/stdout"
    image: phpughh/roadrunner/traefik:${TRAEFIK_VERSION}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - target: 80
        host_ip: 0.0.0.0
        published: "80"
        protocol: tcp
        mode: host
      - target: 443
        host_ip: 0.0.0.0
        published: "443"
        protocol: tcp
        mode: host
    networks:
      default:
        aliases:
          - otel-collector.phpug.hh
          - traefik.phpug.hh
          - www.phpug.hh
          - zipkin.phpug.hh
    privileged: true
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.api-svc.loadbalancer.server.port=9999"

      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.phpug.hh`)"
      - "traefik.http.routers.traefik.priority=2"
      - "traefik.http.routers.traefik.service=api@internal"

  zipkin:
    container_name: zipkin
    hostname: zipkin
    image: phpughh/roadrunner/zipkin:${ZIPKIN_VERSION}
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mariadb
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      - JAVA_OPTS=-Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError
    networks:
      - default
    labels:
      - "traefik.enable=true"

      - "traefik.http.services.zipkin-svc.loadbalancer.server.port=9411"
      - "traefik.http.routers.zipkin.entrypoints=http"
      - "traefik.http.routers.zipkin.rule=Host(`zipkin.phpug.hh`)"
      - "traefik.http.routers.zipkin.priority=2"
      - "traefik.http.routers.zipkin.service=zipkin-svc"